name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for tags

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Get project version from Gradle
        id: project_version
        run: |
          VERSION=$(./gradlew -q printVersion)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists and determine action
        id: check_tag
        run: |
          VERSION=${{ steps.project_version.outputs.VERSION }}
          TAG_NAME="v$VERSION"

          # Check if this is a tag push event
          if [ "${{ github.event_name }}" = "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "SHOULD_RELEASE=true" >> $GITHUB_OUTPUT
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            echo "REASON=tag_push" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if this is a manual trigger
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Get the latest tag for manual triggers
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -n "$LATEST_TAG" ]; then
              echo "SHOULD_RELEASE=true" >> $GITHUB_OUTPUT
              echo "TAG_NAME=$LATEST_TAG" >> $GITHUB_OUTPUT
              echo "REASON=manual" >> $GITHUB_OUTPUT
            else
              echo "SHOULD_RELEASE=false" >> $GITHUB_OUTPUT
              echo "No tags found for manual release"
            fi
            exit 0
          fi

          # For push to main branch, check if version changed and tag doesn't exist
          if git rev-parse --verify "refs/tags/$TAG_NAME" >/dev/null 2>&1; then
            echo "SHOULD_RELEASE=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG_NAME already exists, skipping release"
          else
            echo "SHOULD_RELEASE=true" >> $GITHUB_OUTPUT
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
            echo "REASON=version_change" >> $GITHUB_OUTPUT
            echo "New version $VERSION detected, will create tag and release"
          fi

      - name: Create new tag
        if: steps.check_tag.outputs.SHOULD_RELEASE == 'true' && steps.check_tag.outputs.REASON == 'version_change'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.check_tag.outputs.TAG_NAME }}
          git push origin ${{ steps.check_tag.outputs.TAG_NAME }}

      - name: Build with Gradle
        if: steps.check_tag.outputs.SHOULD_RELEASE == 'true'
        run: ./gradlew build

      - name: Generate JAR files
        if: steps.check_tag.outputs.SHOULD_RELEASE == 'true'
        run: ./gradlew jar sourcesJar javadocJar

      - name: Create Release
        if: steps.check_tag.outputs.SHOULD_RELEASE == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.check_tag.outputs.TAG_NAME }}
          name: Release ${{ steps.check_tag.outputs.TAG_NAME }}
          body: |
            ## Changes in ${{ steps.check_tag.outputs.TAG_NAME }}

            Please see the [CHANGELOG](https://github.com/AshleyThew/minescape-mod-api/blob/main/CHANGELOG.md) for detailed information about changes in this release.

            ### Artifacts
            - `minescape-mod-api-*.jar` - Main library JAR
            - `minescape-mod-api-*-sources.jar` - Sources JAR
            - `minescape-mod-api-*-javadoc.jar` - Javadoc JAR
          files: |
            ./build/libs/minescape-mod-api-${{ steps.project_version.outputs.VERSION }}.jar
            ./build/libs/minescape-mod-api-${{ steps.project_version.outputs.VERSION }}-sources.jar
            ./build/libs/minescape-mod-api-${{ steps.project_version.outputs.VERSION }}-javadoc.jar
          draft: false
          prerelease: false
